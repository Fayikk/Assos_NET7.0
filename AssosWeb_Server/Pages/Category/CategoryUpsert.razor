@page "/category/create"
@page "/category/edit/{id:int}"

@inject ICategoryInterface _categoryInterface
@inject NavigationManager _navigationManager
@attribute [Authorize]

<div class="row my-2">
    <h3 class="card-title text-primary mb-3 ml-3">@Title Category</h3>
    <div class="col-12">

        @if (IsLoading)
        {
            <div class="text-center">
                <img src="/images/loading.gif">
            </div>
        }
        else
        {
            <EditForm Model="Category" OnValidSubmit="UpsertCategory">
                <DataAnnotationsValidator />
                @*<ValidationSummary/>*@
                <div class="form-group">
                    <label>Name</label>
                    <InputText @bind-Value="Category.Name" class="form-control" />
                    <ValidationMessage For="()=>Category.Name"></ValidationMessage>
                </div>
                <div class="form-group py-2">
                    <button class="btn btn-primary">@Title</button>
                    <NavLink href="category" class="btn btn-secondary">Back To Index</NavLink>
                </div>
            </EditForm>
        }

    </div>
</div>


@code {
    [Parameter]
    public int Id { get; set; }

    private CategoryDTO Category { get; set; } = new CategoryDTO();
    private string Title { get; set; } = "Create";
    public bool IsLoading { get; set; } 




    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if(firstRender)
        {
            if (Id == 0)
            {
                IsLoading = false;
            }
            else
            {
                Title = "Update";
               await  LoadCategory();

            }

        }
    }

    private async Task LoadCategory()
    {
        IsLoading = true;
        StateHasChanged();
        Category = await _categoryInterface.Get(Id);
        IsLoading = false;
        StateHasChanged();

    }

    private async Task UpsertCategory()
    {
        if (Category.Id==0)
        {
          await  _categoryInterface.Create(Category);
            //Create
        }
        else{
          await  _categoryInterface.Update(Category);
            //Update
        }


        _navigationManager.NavigateTo("category");
    }

}
